---
title: "R Notebook"
output: hmtl_notebook
---

#load packages
library(tidyverse)
library(ggplot2)
library(lubridate) 
library(dplyr)
library(skimr)
#load data
library(readr)
q2_2019 <- read_csv("~/Cyclist Trip Data/Trip Data/q2_2019.csv")
q3_2019 <- read_csv("~/Cyclist Trip Data/Trip Data/q3_2019.csv")
q4_2019 <- read_csv("~/Cyclist Trip Data/Trip Data/q4_2019.csv")
q1_2020 <- read_csv("~/Cyclist Trip Data/Trip Data/q1_2020.csv")
                                                            
#wrangle and combine data
colnames(q3_2019)
colnames(q4_2019)
colnames(q2_2019)
colnames(q1_2020)

#rename columns
(q4_2019 <- rename(q4_2019
                   ,ride_id = trip_id
                   ,rideable_type = bikeid 
                   ,started_at = start_time  
                   ,ended_at = end_time  
                   ,start_station_name = from_station_name 
                   ,start_station_id = from_station_id 
                   ,end_station_name = to_station_name 
                   ,end_station_id = to_station_id 
                   ,member_casual = usertype))

(q3_2019 <- rename(q3_2019
                   ,ride_id = trip_id
                   ,rideable_type = bikeid 
                   ,started_at = start_time  
                   ,ended_at = end_time  
                   ,start_station_name = from_station_name 
                   ,start_station_id = from_station_id 
                   ,end_station_name = to_station_name 
                   ,end_station_id = to_station_id 
                   ,member_casual = usertype))

(q2_2019 <- rename(q2_2019
                   ,ride_id = "01 - Rental Details Rental ID"
                   ,rideable_type = "01 - Rental Details Bike ID" 
                   ,started_at = "01 - Rental Details Local Start Time"  
                   ,ended_at = "01 - Rental Details Local End Time"  
                   ,start_station_name = "03 - Rental Start Station Name" 
                   ,start_station_id = "03 - Rental Start Station ID"
                   ,end_station_name = "02 - Rental End Station Name" 
                   ,end_station_id = "02 - Rental End Station ID"
                   ,member_casual = "User Type"))

#Inspect the data-frame
str(q1_2020)
str(q4_2019)
str(q3_2019)
str(q2_2019)

#Converting 
q4_2019 <-  mutate(q4_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 
q3_2019 <-  mutate(q3_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 
q2_2019 <-  mutate(q2_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 
#Stacking
all_trips <- bind_rows(q2_2019, q3_2019, q4_2019, q1_2020)

#Removing fields
all_trips <- all_trips %>%  
  select(-c(start_lat, start_lng, end_lat, end_lng, birthyear, gender, "01 - Rental Details Duration In Seconds Uncapped", "05 - Member Details Member Birthday Year", "Member Gender", "tripduration"))
all_trips <- all_trips %>%  select(-c(...13, ...14, ...15))


#cleaning data-set
colnames(all_trips)
nrow(all_trips)
dim(all_trips)
head(all_trips)
str(all_trips)
summary(all_trips)
tail(all_trips)

#Reassign
all_trips <-  all_trips %>% 
  mutate(member_casual = recode(member_casual
 ,"Subscriber" = "member" ,"Customer" = "casual"))
table(all_trips$member_casual)

#add columns
 all_trips$date <- as.Date(all_trips$started_at)
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

#converting data types
all_trips$started_at<-ymd_hms(all_trips$started_at)
all_trips$ended_at <- ymd_hms(all_trips$ended_at)
# Add a "ride_length" calculation to all_trips (in secs)
all_trips$ride_length <- difftime(all_trips$ended_at,all_trips$started_at,units = "secs")
head(all_trips$ride_length)
str(all_trips)

#convert columns
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))

#remove bad data 
all_trips_v2 <- all_trips[!(all_trips$start_station_name == "HQ QR" | all_trips$ride_length<0),]

#number of NA's
sum(is.na(all_trips_v2))
#remove rows with NA's 
all_trips_v3 <- na.omit(all_trips_v2)


#analysis (figure in seconds)
#analysis on ride_length
mean(all_trips_v3$ride_length)
median(all_trips_v3$ride_length) 
max(all_trips_v3$ride_length) 
min(all_trips_v3$ride_length) 
summary(all_trips_v3$ride_length)
                                
# Compare members and casual users
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual, FUN = mean)
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual, FUN = median)
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual, FUN = max)
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual, FUN = min)

# see average ride time by each day for members vs casual users
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)

#dates in order
all_trips_v3$day_of_week <- ordered(all_trips_v3$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

# run average ride time by each day for members vs casual users
aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)

# analyze ridership data by type and weekday
all_trips_v3 %>%  
  mutate(weekday = wday(started_at,label = TRUE)) %>%    #creates weekday field using wday()
  group_by(member_casual, weekday) %>%   #groups by usertype and weekday
  summarise(number_of_rides = n()							#calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>%  		# calculates the average duration
  arrange(member_casual, weekday)		

# visualize the number of rides by rider type
all_trips_v3 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")

# Let's create a visualization for average duration
all_trips_v3 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")

## Create a visualization for total number of rides by month  
all_trips_v3 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, month)  %>% 
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")
#total number of riders by station

#export for further analysis
counts <- aggregate(all_trips_v3$ride_length ~ all_trips_v3$member_casual + all_trips_v3$day_of_week, FUN = mean)
